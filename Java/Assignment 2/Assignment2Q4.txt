1.If any class has any of its method abstract then you must declare entire class abstract.

package com.company;

class DeclareAbstract		//this class have 1 abstract method we need to declare whole class as abstract class.
    abstract void sayHello();	// so we need to declare this class as abstract class by using abstract keyword else it will give erro.
}



public class ClassMustDeclareAbstract {
    public static void main(String [] args){
        ImplementsMethod im = new ImplementsMethod();
        im.sayHello();
    }
}

-------------------------------------------------------------

2.Abstract class cannot be instantiated.

package com.company;

abstract class AbstractClass{	//we can not create object of abstract class.
    abstract void sayHello();
}
public class CannotBeIntantiated {
    public static void main(String [] args){
        AbstractClass ac = new AbstractClass();
    }
}


3.When we extend an abstract class, we must either override all the abstract methods in sub class or declare subclass as abstract.
package com.company;

abstract class AbstractClass{		//abstract class
    abstract void sayHello();
}

class ImplementingAbstract extends AbstractClass{	//implements all abstract method or else it will have to become astract class.
    @Override
    void sayHello(){
        System.out.println("Implementation of Abstract Method");
    }
}
public class ImplementORDeclareAbstract {
    public static void main(String [] args){
        ImplementingAbstract ia = new ImplementingAbstract();
        ia.sayHello();
    }
}



4.Abstract class cannot be private.

package com.company;

private abstract class DemonstrateAbstract{	//It will give error because we can not make abstract class as private
    private abstract void sayHello();
}

class Inheritance extends DemonstrateAbstract{
    void sayHello(){
        System.out.println("Cannot make class or method final");
    }
}
public class CannotPrivate {
    public static void main(String [] args){
        Inheritance i = new Inheritance();
        i.sayHello();
    }
}



5.Abstract class cannot be final.

package com.company;

final abstract class DemonstrateAbstract{	////It will give error because we can not make abstract class as final
    abstract void sayHello();
}

class ImplementAbsttract extends DemonstrateAbstract{
    void sayHello(){
        System.out.println("Hello from implementing class");
    }
}
public class CannotFinal {
    public static void main(String [] args){
        ImplementAbsttract ia = new ImplementAbsttract();
        ia.sayHello();
    }
}



6.You can declare a class abstract without having any abstract method.
package com.company;

abstract class DemonstrateAbstract{	//abstract class having non-abstract method
    void sayhello(){		
        System.out.println("Hello from Abstract Parent Class");
    };
};

class ImplementAbstract extends DemonstrateAbstract{
    @Override
    void sayhello() {
        System.out.println("Hello from child class");
    }
}
public class ClassWithoutAbstractMethod {
    public static void main(String [] args){
        ImplementAbstract ia = new ImplementAbstract();
        ia.sayhello();
    }
}


